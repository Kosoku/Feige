{"Structs/IndirectReference.html#/s:5Feige17IndirectReferenceV5valuexvp":{"name":"value","abstract":"<p>Set/get the referenced value.</p>","parent_name":"IndirectReference"},"Structs/IndirectReference.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"IndirectReference"},"Structs/IndirectReference.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"IndirectReference"},"Structs/IndirectReference.html#/s:5Feige17IndirectReferenceVyACyxGxcfc":{"name":"init(_:)","abstract":"<p>Creates an instance referencing the provided <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/IndirectReference.html#/s:5Feige17IndirectReferenceV5valuexvp\">value</a></code>.</p>","parent_name":"IndirectReference"},"Structs/IndirectReference.html":{"name":"IndirectReference","abstract":"<p>Allows recursively referencing a struct within itself.</p>"},"Protocols/ScopeFunctions.html#/s:5Feige14ScopeFunctionsPAAE3letyqd__qd__xXElF":{"name":"let(_:)","abstract":"<p>Invokes the provided <code>block</code> and returns the result, providing the receiver as the only argument.</p>","parent_name":"ScopeFunctions"},"Protocols/ScopeFunctions.html#/s:5Feige14ScopeFunctionsPAAE6takeIfyxSgSbxXEF":{"name":"takeIf(_:)","abstract":"<p>Invokes the provided <code>predicate</code>, if it returns <code>true</code>, returns the receiver, otherwise returns nil.</p>","parent_name":"ScopeFunctions"},"Protocols/ScopeFunctions.html#/s:5Feige14ScopeFunctionsPAAE10takeUnlessyxSgSbxXEF":{"name":"takeUnless(_:)","abstract":"<p>Invokes the provided <code>predicate</code>, if it returns <code>true</code>, returns nil, otherwise returns the receiver.</p>","parent_name":"ScopeFunctions"},"Protocols/ScopeFunctions.html#/s:5Feige14ScopeFunctionsPAAE4alsoyxyxzXEF":{"name":"also(_:)","abstract":"<p>Invokes the provided <code>block</code>, providing the receiver as the only argument and returns the receiver.</p>","parent_name":"ScopeFunctions"},"Protocols/ScopeFunctions.html#/s:5Feige14ScopeFunctionsPAARlzCrlE4alsoyxyxXEF":{"name":"also(_:)","abstract":"<p>Invokes the provided <code>block</code>, providing the receiver as the only argument and returns the receiver.</p>","parent_name":"ScopeFunctions"},"Protocols/Emptyable.html#/s:5Feige9EmptyableP7isEmptySbvp":{"name":"isEmpty","abstract":"<p>Returns whether the receiver is empty.</p>","parent_name":"Emptyable"},"Protocols/Emptyable.html#/s:5Feige9EmptyablePAAE10isNotEmptySbvp":{"name":"isNotEmpty","abstract":"<p>Returns whether the receiver is <strong>NOT</strong> empty.</p>","parent_name":"Emptyable"},"Protocols/Emptyable.html#/s:5Feige9EmptyablePAAE10nilIfEmptyxSgvp":{"name":"nilIfEmpty","abstract":"<p>Returns <code>nil</code> if the receiver is empty, otherwise returns the receiver.</p>","parent_name":"Emptyable"},"Protocols/EmptyValueRepresentable.html#/s:5Feige23EmptyValueRepresentableP05emptyC0xvpZ":{"name":"emptyValue","abstract":"<p>Returns the value representing the receiver&rsquo;s empty state.</p>","parent_name":"EmptyValueRepresentable"},"Protocols/EmptyValueRepresentable.html":{"name":"EmptyValueRepresentable","abstract":"<p>Describes an object that has a specific value representing its empty state.</p>"},"Protocols/Emptyable.html":{"name":"Emptyable","abstract":"<p>Describes an object that be empty.</p>"},"Protocols/ScopeFunctions.html":{"name":"ScopeFunctions","abstract":"<p>Conformance to this protocol provides implementation of <strong>some</strong> of the <em>Kotlin Scope Functions</em>. To add conformance to your own types, see examples below.</p>"},"Functions.html#/s:5Feige1loiySbSo15NSDecimalNumberC_ADtF":{"name":"<(_:_:)","abstract":"<p>Returns whether <code>left</code> is less than <code>right</code>.</p>"},"Functions.html#/s:5Feige2leoiySbSo15NSDecimalNumberC_ADtF":{"name":"<=(_:_:)","abstract":"<p>Returns whether <code>left</code> is less than or equal to <code>right</code>.</p>"},"Functions.html#/s:5Feige1goiySbSo15NSDecimalNumberC_ADtF":{"name":">(_:_:)","abstract":"<p>Returns whether <code>left</code> is greater than <code>right</code>.</p>"},"Functions.html#/s:5Feige2geoiySbSo15NSDecimalNumberC_ADtF":{"name":">=(_:_:)","abstract":"<p>Returns whether <code>left</code> is greater than or equal to <code>right</code>.</p>"},"Functions.html#/s:5Feige1poiySo15NSDecimalNumberCAD_ADtF":{"name":"+(_:_:)","abstract":"<p>Returns the result of adding <code>left</code> to <code>right</code>.</p>"},"Functions.html#/s:5Feige2peoiyySo15NSDecimalNumberCz_ADtF":{"name":"+=(_:_:)","abstract":"<p>Adds <code>left</code> to <code>right</code> and assigns the result to <code>left</code>.</p>"},"Functions.html#/s:5Feige1soiySo15NSDecimalNumberCAD_ADtF":{"name":"-(_:_:)","abstract":"<p>Returns the result of subtracting <code>right</code> from <code>right</code>.</p>"},"Functions.html#/s:5Feige2seoiyySo15NSDecimalNumberCz_ADtF":{"name":"-=(_:_:)","abstract":"<p>Subtracts <code>right</code> from <code>left</code> and assigns the result to <code>left</code>.</p>"},"Functions.html#/s:5Feige1moiySo15NSDecimalNumberCAD_ADtF":{"name":"*(_:_:)","abstract":"<p>Returns the result of multiplying <code>left</code> by <code>right</code>.</p>"},"Functions.html#/s:5Feige2meoiyySo15NSDecimalNumberCz_ADtF":{"name":"*=(_:_:)","abstract":"<p>Multiplies <code>left</code> by <code>right</code> and assigns the result to <code>left</code>.</p>"},"Functions.html#/s:5Feige1doiySo15NSDecimalNumberCAD_ADtF":{"name":"/(_:_:)","abstract":"<p>Returns the result of dividing <code>left</code> by <code>right</code>.</p>"},"Functions.html#/s:5Feige2deoiyySo15NSDecimalNumberCz_ADtF":{"name":"/=(_:_:)","abstract":"<p>Divides <code>left</code> by <code>right</code> and assigns the result to <code>left</code>.</p>"},"Functions.html#/s:5Feige3minySo15NSDecimalNumberCAD_ADtF":{"name":"min(_:_:)","abstract":"<p>Returns the minimum value of <code>left</code> and <code>right</code>.</p>"},"Functions.html#/s:5Feige3maxySo15NSDecimalNumberCAD_ADtF":{"name":"max(_:_:)","abstract":"<p>Returns the maximum value of <code>left</code> and <code>right</code>.</p>"},"Functions.html#/s:5Feige3runyxxyXElF":{"name":"run(_:)","abstract":"<p>Invokes the provided <code>block</code> and returns the result.</p>"},"Extensions/NSDecimalNumber.html#/s:So15NSDecimalNumberC5FeigeE11negativeOneABvpZ":{"name":"negativeOne","abstract":"<p>Constant for <code>-1</code>.</p>","parent_name":"NSDecimalNumber"},"Extensions/NSDecimalNumber.html#/s:So15NSDecimalNumberC5FeigeE3absAByF":{"name":"abs()","abstract":"<p>Returns the absolute value of  the receiver.</p>","parent_name":"NSDecimalNumber"},"Extensions/NSDecimalNumber.html#/s:So15NSDecimalNumberC5FeigeE8negativeAByF":{"name":"negative()","abstract":"<p>Returns the result of multiplying the absolute value of the receiver by <code>-1</code>.</p>","parent_name":"NSDecimalNumber"},"Extensions/NSDecimalNumber.html#/s:So15NSDecimalNumberC5FeigeE8invertedAByF":{"name":"inverted()","abstract":"<p>Returns the result of multiplying the receiver by <code>-1</code>.</p>","parent_name":"NSDecimalNumber"},"Extensions/KeyPath.html#/s:s7KeyPathC5FeigeSo8NSObjectCRbzrlE8toStringSSvp":{"name":"toString","abstract":"<p>Returns the <code>String</code> equivalent of the receiver.</p>","parent_name":"KeyPath"},"Extensions/Error.html#/s:s5ErrorP5Feige10Foundation13CustomNSErrorRzrlE010underlyingA0sAA_pSgvp":{"name":"underlyingError","abstract":"<p>Returns the underlying error.</p>","parent_name":"Error"},"Extensions/Error.html#/s:s5ErrorP5Feige10Foundation13CustomNSErrorRzAD09LocalizedA0RzrlE09localizedA8UserInfoSDySSypGvp":{"name":"localizedErrorUserInfo","abstract":"<p>Returns the localized error user info dictionary, which will include the <code>LocalizedError.errorDescription</code> and <code>LocalizedError.failureReason</code> if non-nil.</p>","parent_name":"Error"},"Extensions/String.html#/s:5Feige23EmptyValueRepresentableP05emptyC0xvpZ":{"name":"emptyValue","parent_name":"String"},"Extensions/Set.html#/s:5Feige23EmptyValueRepresentableP05emptyC0xvpZ":{"name":"emptyValue","parent_name":"Set"},"Extensions/Dictionary.html#/s:5Feige23EmptyValueRepresentableP05emptyC0xvpZ":{"name":"emptyValue","parent_name":"Dictionary"},"Extensions/Optional.html#/s:Sq5FeigeE5isNilSbvp":{"name":"isNil","abstract":"<p>Returns whether the receiver is <code>nil</code>.</p>","parent_name":"Optional"},"Extensions/Optional.html#/s:Sq5FeigeE8isNotNilSbvp":{"name":"isNotNil","abstract":"<p>Returns whether the receiver is <strong>NOT</strong> <code>nil</code>.</p>","parent_name":"Optional"},"Extensions/Optional.html#/s:Sq5FeigeAA23EmptyValueRepresentableRzlE07valueOrB0xvp":{"name":"valueOrEmpty","abstract":"<p>Returns the wrapped value or the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/EmptyValueRepresentable.html#/s:5Feige23EmptyValueRepresentableP05emptyC0xvpZ\">EmptyValueRepresentable.emptyValue</a></code> if the receiver is nil.</p>","parent_name":"Optional"},"Extensions/Optional.html#/s:Sq5FeigeAA9EmptyableRzlE12isEmptyOrNilSbvp":{"name":"isEmptyOrNil","abstract":"<p>Returns whether the receiver is empty or nil.</p>","parent_name":"Optional"},"Extensions/Optional.html#/s:Sq5FeigeAA9EmptyableRzlE15isNotEmptyOrNilSbvp":{"name":"isNotEmptyOrNil","abstract":"<p>Returns whether the receiver is <strong>NOT</strong> empty or nil.</p>","parent_name":"Optional"},"Extensions/Bool.html#/s:Sb5FeigeE3notSbyF":{"name":"not()","abstract":"<p>Returns the inverse of the receiver.</p>","parent_name":"Bool"},"Extensions/Array.html#/s:Sa5FeigeE23subarrayWithMiddleIndex_6lengthSayxGSi_SitF":{"name":"subarrayWithMiddleIndex(_:length:)","abstract":"<p>Returns a subarray starting at <code>index</code>, extending backwards at most <code>length</code>elements and forwards at most <code>length</code> elements for a subarray of <strong>at most</strong> <code>(length * 2) + 1</code> elements.</p>","parent_name":"Array"},"Extensions/Array.html#/s:5Feige23EmptyValueRepresentableP05emptyC0xvpZ":{"name":"emptyValue","parent_name":"Array"},"Extensions/Array.html#/s:Sa5FeigeSQRzlE25subarrayWithMiddleElement_6lengthSayxGx_SitF":{"name":"subarrayWithMiddleElement(_:length:)","abstract":"<p>Calls through to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbExtensions/Array.html#/s:Sa5FeigeE23subarrayWithMiddleIndex_6lengthSayxGSi_SitF\">Array.subarrayWithMiddleIndex(_:length:)</a></code> after determining the index of <code>value</code>.</p>","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Extensions/Bool.html":{"name":"Bool"},"Extensions/Optional.html":{"name":"Optional"},"Extensions/Dictionary.html":{"name":"Dictionary"},"Extensions/Set.html":{"name":"Set"},"Extensions/String.html":{"name":"String"},"Extensions/Error.html":{"name":"Error"},"Extensions/KeyPath.html":{"name":"KeyPath"},"Extensions/NSDecimalNumber.html":{"name":"NSDecimalNumber"},"Extensions.html#/s:Si":{"name":"Int"},"Extensions.html#/s:Sf":{"name":"Float"},"Extensions.html#/s:Sd":{"name":"Double"},"Extensions.html#/s:10Foundation4DateV":{"name":"Date"},"Extensions.html#/s:10Foundation3URLV":{"name":"URL"},"Extensions.html#/c:objc(cs)NSObject":{"name":"NSObject"},"Extensions.html#/c:@S@CGAffineTransform":{"name":"CGAffineTransform"},"Extensions.html#/s:14CoreFoundation7CGFloatV":{"name":"CGFloat"},"Extensions.html#/c:@S@CGPoint":{"name":"CGPoint"},"Extensions.html#/c:@S@CGRect":{"name":"CGRect"},"Extensions.html#/c:@S@CGSize":{"name":"CGSize"},"Extensions.html#/c:@S@CGVector":{"name":"CGVector"},"Classes/WeakReference.html#/s:5Feige13WeakReferenceC5valuexSgvp":{"name":"value","abstract":"<p>Returns the weakly referenced value.</p>","parent_name":"WeakReference"},"Classes/WeakReference.html#/s:5Feige13WeakReferenceC4hashSivp":{"name":"hash","abstract":"<p>Undocumented</p>","parent_name":"WeakReference"},"Classes/WeakReference.html#/s:5Feige13WeakReferenceC7isEqualySbypSgF":{"name":"isEqual(_:)","abstract":"<p>Undocumented</p>","parent_name":"WeakReference"},"Classes/WeakReference.html#/s:5Feige13WeakReferenceCyACyxGxcfc":{"name":"init(_:)","abstract":"<p>Creates an instance that weakly references the provided <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/WeakReference.html#/s:5Feige13WeakReferenceC5valuexSgvp\">value</a></code>.</p>","parent_name":"WeakReference"},"Classes/ReadWriteLock.html#/s:5Feige13ReadWriteLockC5valuexvp":{"name":"value","abstract":"<p>Returns the current value.</p>","parent_name":"ReadWriteLock"},"Classes/ReadWriteLock.html#/s:5Feige13ReadWriteLockC6mutateyyyxzcF":{"name":"mutate(_:)","abstract":"<p>Mutates the current value within the provided <code>block</code>.</p>","parent_name":"ReadWriteLock"},"Classes/ReadWriteLock.html#/s:5Feige13ReadWriteLockC_5label16qualityOfServiceACyxGx_SSSg8Dispatch0I3QoSVtcfc":{"name":"init(_:label:qualityOfService:)","abstract":"<p>Creates an instance with the provided parameters.</p>","parent_name":"ReadWriteLock"},"Classes/ReadWriteLock.html":{"name":"ReadWriteLock","abstract":"<p>Many readers, single writer generic lock.</p>"},"Classes/WeakReference.html":{"name":"WeakReference","abstract":"<p>Allows weakly reference another object.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}