{"Protocols/ScopeFunctions.html#/s:5Feige14ScopeFunctionsPAAE3letyqd__qd__xXElF":{"name":"let(_:)","abstract":"<p>Invokes the provided <code>block</code> and returns, providing the receiver as the only argument.</p>","parent_name":"ScopeFunctions"},"Protocols/ScopeFunctions.html#/s:5Feige14ScopeFunctionsPAAE6takeIfyxSgSbxXEF":{"name":"takeIf(_:)","abstract":"<p>Invokes the provided <code>predicate</code>, if it returns <code>true</code>, returns the receiver, otherwise returns nil.</p>","parent_name":"ScopeFunctions"},"Protocols/ScopeFunctions.html#/s:5Feige14ScopeFunctionsPAAE10takeUnlessyxSgSbxXEF":{"name":"takeUnless(_:)","abstract":"<p>Invokes the provided <code>predicate</code>, if it returns <code>true</code>, returns nil, otherwise returns the receiver.</p>","parent_name":"ScopeFunctions"},"Protocols/ScopeFunctions.html#/s:5Feige14ScopeFunctionsPAAE4alsoyxyxzXEF":{"name":"also(_:)","abstract":"<p>Invokes the provided <code>block</code>, providing the receiver as the only argument and returns the receiver.</p>","parent_name":"ScopeFunctions"},"Protocols/ScopeFunctions.html#/s:5Feige14ScopeFunctionsPAARlzCrlE4alsoyxyxXEF":{"name":"also(_:)","abstract":"<p>Invokes the provided <code>block</code>, providing the receiver as the only argument and returns the receiver.</p>","parent_name":"ScopeFunctions"},"Protocols/ScopeFunctions.html":{"name":"ScopeFunctions","abstract":"<p>Conformance to this protocol provides implementation of <strong>some</strong> of the <em>Kotlin Scope Functions</em>. To add conformance to your own types, see examples below.</p>"},"Functions.html#/s:5Feige3runyxxyXElF":{"name":"run(_:)","abstract":"<p>Invokes the provided <code>block</code> and returns the result.</p>"},"Extensions.html#/s:Sb":{"name":"Bool"},"Extensions.html#/s:Si":{"name":"Int"},"Extensions.html#/s:Sf":{"name":"Float"},"Extensions.html#/s:Sd":{"name":"Double"},"Extensions.html#/s:SS":{"name":"String"},"Extensions.html#/s:Sa":{"name":"Array"},"Extensions.html#/s:Sh":{"name":"Set"},"Extensions.html#/s:SD":{"name":"Dictionary"},"Extensions.html#/c:objc(cs)NSObject":{"name":"NSObject"},"Extensions.html#/c:@S@CGAffineTransform":{"name":"CGAffineTransform"},"Extensions.html#/s:14CoreFoundation7CGFloatV":{"name":"CGFloat"},"Extensions.html#/c:@S@CGPoint":{"name":"CGPoint"},"Extensions.html#/c:@S@CGRect":{"name":"CGRect"},"Extensions.html#/c:@S@CGSize":{"name":"CGSize"},"Extensions.html#/c:@S@CGVector":{"name":"CGVector"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}