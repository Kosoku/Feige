# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  info_plist_path = "Feige/Info.plist"
  podspec_name = "Feige.podspec"
  plist_bundle_short_version_string_key = "CFBundleShortVersionString"

  desc "Description of what the lane does"
  lane :unit_tests do
    run_tests(scheme: "Feige")
  end

  desc "Lint local podspec"
  lane :lint_local_podspec do
    Dir.chdir("..") do
      sh("bundle exec pod lib lint #{podspec_name}")
    end
  end

  desc "Lint remote podspec"
  lane :lint_remote_podspec do
    Dir.chdir("..") do
      sh("bundle exec pod spec lint #{podspec_name}")
    end
  end

  desc "Push remote podspec"
  lane :push_remote_podspec do
    Dir.chdir("..") do
      sh("bundle exec pod trunk push #{podspec_name}")
    end
  end

  desc "Update docs"
  lane :update_docs do
    Dir.chdir("..") do
      sh("./scripts/jazzy.sh")
      sh("git add .")
      sh("git commit -a -m \"Update docs\"")
    end
  end

  desc "Create git tag"
  lane :create_git_tag do
    Dir.chdir("..") do
      tag_name = sh("./scripts/print_info_plist_key.sh #{plist_bundle_short_version_string_key}").strip()
      
      sh("git tag -a #{tag_name} -m \"Version #{tag_name}\"")
    end
  end

  desc "Set short version string"
  lane :set_short_version_string do
    Dir.chdir("..") do
      short_version_string = prompt(text: "Short version string: ")

      sh("./scripts/set_info_plist_key.sh #{plist_bundle_short_version_string_key} #{short_version_string}")
      sh("./scripts/set_podspec_version.sh #{short_version_string}")
      sh("git commit -a -m \"Bump version to #{short_version_string}\"")
    end
  end
end
